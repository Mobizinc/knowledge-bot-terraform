{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "armknowledgebotsa",
      "metadata": {
        "description": "Name of the Storage Account"
      }
    },
    "servicePlanName": {
      "type": "string",
      "defaultValue": "asp-knowledge-bot",
      "metadata": {
        "description": "Name of the App Service Plan"
      }
    },
    "servicePlanNameLA": {
      "type": "string",
      "defaultValue": "asp-knowledge-bot-logic-app",
      "metadata": {
        "description": "Name of the App Service Plan for Logic App"
      }
    },
    "linuxWebAppBE": {
      "type": "string",
      "defaultValue": "knowledge-bot-back-end",
      "metadata": {
        "description": "Name of the Linux Web App Backend"
      }
    },
    "linuxWebAppFE": {
      "type": "string",
      "defaultValue": "knowledge-bot-front-end",
      "metadata": {
        "description": "Name of the Linux Web App Frontend"
      }
    },
    "managedIdentityName": {
      "type": "string",
      "defaultValue": "mi-knowledge-bot",
      "metadata": {
        "description": "Name of the Managed Identity"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "knowledge-bot-kv",
      "metadata": {
        "description": "Name of the Key Vault"
      }
    },
    "appInsightsBE": {
      "type": "string",
      "defaultValue": "kb-backend-ai",
      "metadata": {
        "description": "Name of the Application Insights Backend"
      }
    },
    "appInsightsBlob": {
      "type": "string",
      "defaultValue": "ai-kb-blobtrigger",
      "metadata": {
        "description": "Name of the Application Insights Blob"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "kb-dev-law",
      "metadata": {
        "description": "Name of the Log Analytics Workspace"
      }
    },
    "redisCacheName": {
      "type": "string",
      "defaultValue": "knowledge-bot",
      "metadata": {
        "description": "Name of the Redis Cache"
      }
    },
    "logicAppName": {
      "type": "string",
      "defaultValue": "knowledge-bot-la",
      "metadata": {
        "description": "Name of the Logic App"
      }
    },
    "linuxFunctionAppBlob": {
      "type": "string",
      "defaultValue": "kb-blobtrigger",
      "metadata": {
        "description": "Name of the Linux Function App for Blob"
      }
    },
    "eventGridTopicName": {
      "type": "string",
      "defaultValue": "kb-eventgrid-blobtrigger",
      "metadata": {
        "description": "Name of the Event Grid Topic"
      }
    },
    "environment": {
      "type": "string"
    },
    "application_name": {
      "type": "string"
    },
    "Project_Code": {
      "type": "string"
    },
    "Owner": {
      "type": "string"
    },
    "searchServiceName": {
      "type": "string",
      "defaultValue": "knowledge-bot-basic",
      "metadata": {
        "description": "Name of the Azure Cognitive Search service"
      }
    },
    "openAiServiceName": {
      "type": "string",
      "defaultValue": "azure-chatbot-openai",
      "metadata": {
        "description": "Name of the Azure OpenAI service"
      }
    },
    "sqlServerName": {
      "type": "string",
      "defaultValue": "azure-chatbot-sql",
      "metadata": {
        "description": "Name of the SQL Server"
      }
    },
    "sqlAdminUsername": {
      "type": "string",
      "defaultValue": "azurechatbotuser",
      "metadata": {
        "description": "SQL Server admin username"
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Server admin password"
      }
    },
    "sqlDatabaseName": {
      "type": "string",
      "defaultValue": "azurechatbotdb",
      "metadata": {
        "description": "Name of the SQL Database"
      }
    }
  },
  "resources": [
    //////////Storage Account//////////
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-08-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    //////////ASP//////////
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('servicePlanName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "sku": {
        "name": "B3"
        //"tier": "[if(contains(parameters('servicePlanSku'), 'P'), 'PremiumV2', if(contains(parameters('servicePlanSku'), 'S'), 'Standard', 'Free'))]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    //////////ASP-LA//////////
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('servicePlanNameLA')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "sku": {
        "name": "WS1"
        //"tier": "[if(contains(parameters('servicePlanSku'), 'P'), 'PremiumV2', if(contains(parameters('servicePlanSku'), 'S'), 'Standard', 'Free'))]"
      },
      "kind": "windows",
      "properties": {
        "reserved": false
      }
    },
    //////////Linux Webapp Backend//////////
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('linuxWebAppBE')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
            "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]": {}
        }
      },
      "properties": {
        "httpsOnly": true,
        "keyVaultReferenceIdentity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('servicePlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "vnetRouteAllEnabled": true,
          "appCommandLine": "python -m uvicorn main:app --host 0.0.0.0",
          "pythonversion": "3.10",
          "cors": {
            "allowedOrigins": [
                   "http://localhost:3000",
                   "https://calm-grass-07517a20f.4.azurestaticapps.net",
                   "https://knowledge-bot-front-end-test.azurewebsites.net",
                   "https://knowledge.mobizinc.com"
                ],
            "supportCredentials": true
          },
          "appSettings": [
            {
              "WEBSITE_PYTHON_VERSION"              : "3.10",
              "SCM_DO_BUILD_DURING_DEPLOYMENT"      :  "true",
              "ACCESS_TOKEN_EXPIRES_IN"             : "15", 
              "AZURE_CLIENT_ID"                     : "76ae1e67-c3d9-464d-b7f7-e5b89398e221",
              "AZURE_COGNITIVE_SEARCH_INDEX_NAME"   : "mobizsalesindex",
              "AZURE_COGNITIVE_SEARCH_SERVICE_NAME" : "https://knowledge-bot-basic-15.search.windows.net",
              "AZURE_TENANT_ID"                     : "8bfe0e10-3213-49c3-ba07-719dee9fd10b",
              "BLOB_CONTAINER_NAME"                 : "mobizsalesdocs",
              "CLIENT_ORIGIN"                       : "http://localhost:3000",
              "DOCUMENT_CHUNK_OVERLAP"              : "100",
              "DOCUMENT_CHUNK_SIZE"                 : "1000",
              "DOCUMENT_SOURCE_DIRECTORY"           : "HR", 
              "INDEX_DOCUMENT"                      : "False",
              "JWT_ALGORITHM"                       : "HS256",
              "LANGCHAIN_API_KEY"                   : "ls__8ac8b824b49c41a6b9f841913de6b998",
              "LANGCHAIN_PROJECT"                   : "pt-knowledge-bot-mobiz",
              "OPENAI_API_BASE"                     : "https://azure-chatbot-openai.openai.azure.com/",
              "OPENAI_API_KEY"                      : "fb9d9eaaf03c46629022499658423536",
              "OPENAI_API_VERSION"                  : "2023-05-15",
              "POSTGRES_DB"                         : "apollo",
              "POSTGRES_HOST"                       : "azure-chatbot-sql.database.windows.net",
              "POSTGRES_HOSTNAME"                   : "azure-chatbot-sql.database.windows.net",
              "POSTGRES_PASSWORD"                   : "9aX!7rP^2oL8t3Y0z",
              "POSTGRES_USER"                       : "muhammad.ayaz",
              "REDIS_CACHE_HOST"                    : "mobizassistant.redis.cache.windows.net",
              "REDIS_CACHE_PORT"                    : "6380",
              "REFRESH_TOKEN_EXPIRES_IN"            : "60", 
              "SEARCH_API_VERSION"                  : "2023-07-01-Preview",
              "SEARCH_SERVICE_NAME"                 : "knowledge-bot-basic-15",
              "SECOND_DB"                           : "apollo",
              "SECRET_KEY"                          : "supersecretljfdl283894839jlddfk",
              "STORAGE_ACCOUNT_NAME"                : "asanofibotsdemo85dd",
              "STORAGE_CONNECTION_STRING"           : "DefaultEndpointsProtocol=https;AccountName=asanofibotsdemo85dd;AccountKey=***;EndpointSuffix=core.windows.net\"",
              "UPLOAD_DOCUMENTS"                    : "False"
            }
          ]
        }
      }
    },
    //////////Linux Webapp Frontend//////////
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('linuxWebAppFE')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('servicePlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "nodeVersion": "18-lts",
          "appSettings": [
            {
                "APPLICATIONINSIGHTS_CONNECTION_STRING"      : "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsBlob'))).ConnectionString]",
                "AZURE_AD_CLIENT_ID"                         : "76ae1e67-c3d9-464d-b7f7-e5b89398e221",
                "AZURE_AD_TENANT_ID"                         : "organizations",
                "ApplicationInsightsAgent_EXTENSION_VERSION" : "~3",
                "NEXTAUTH_SECRET"                            : "ZmPyZU/WBIa4oATeVrDnm/ZDnAq8dzVLtrbZZRcoMRg=",
                "NEXTAUTH_URL"                               : "https://knowledge.mobizinc.com",
                "NEXT_PUBLIC_API_URL"                        : "https://knowledge-bot-back-end.azurewebsites.net",
                "SCM_DO_BUILD_DURING_DEPLOYMENT"             : "true",
                "WEBSITE_NODE_DEFAULT_VERSION"               : "18-lts",
                "XDT_MicrosoftApplicationInsights_Mode"      : "default"
            }
          ]
        }
      }
    },
    //////////Managed Identity//////////
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[parameters('managedIdentityName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      }
    },
    //////////Key Vault//////////
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "properties": {
        "softDeleteRetentionInDays": 7,
        "enablePurgeProtection": true,
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(concat('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('managedIdentityName'))).principalId]",
            "permissions": {
              "keys": [
                "get",
                "list"
              ],
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      }
    },
    //////////App Insight Backend//////////
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2015-05-01",
      "name": "[parameters('appInsightsBE')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      },
      "kind": "web"
    },
    //////////App Insight Blob//////////
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2015-05-01",
      "name": "[parameters('appInsightsBlob')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "properties": {
        "Application_Type": "web",
        "publicNetworkAccessForIngestion": "Enabled"
      },
      "kind": "web"
    },
    //////////Loganalytics Workspace//////////
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[parameters('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "properties": {
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    //////////Redis Cache//////////
    {
      "type": "Microsoft.Cache/redis",
      "apiVersion": "2021-06-01",
      "name": "[parameters('redisCacheName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "properties": {
        "sku": {
          "name": "Basic",
          "family": "C",
          "capacity": 0
        },
        "enableNonSslPort": false,
        "minimumTlsVersion": "1.2"
      }
    },
    //////////Linux Function App//////////
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('linuxFunctionAppBlob')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsBlob'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('servicePlanName'))]",
        "siteConfig": {
          "vnetRouteAllEnabled": true,
          "alwaysOn": true,
          "pythonversion": "3.10",
          "appSettings": [
            {
              "AzureWebJobsStorage"            : "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-02-01').keys[0].value, ';EndpointSuffix=core.windows.net')]",
              "APPINSIGHTS_INSTRUMENTATIONKEY" : "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsBlob'))).InstrumentationKey]"
            }
          ]
        }
      },
      "kind": "functionapp,linux"
    },
    //////////Logicapp Standard//////////
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment"     : "[parameters('environment')]",
        "application_name": "[parameters('application_name')]",
        "Project_Code"    : "[parameters('Project_Code')]",
        "Owner"           : "[parameters('Owner')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('servicePlanNameLA'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('servicePlanNameLA'))]",
        "siteConfig": {
          "appSettings": [
            {
              "AzureWebJobsStorage"            : "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-02-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
            }
          ]
        },
        "httpsOnly": true
      },
      "kind": "functionapp,workflowapp",
      "identity": {
        "type": "SystemAssigned"
      }
    },
    //////////Eventgrid Topic//////////
    {
      "type": "Microsoft.EventGrid/topics",
      "apiVersion": "2021-12-01",
      "name": "[parameters('eventGridTopicName')]",
      "location": "[parameters('location')]",
      "properties": {}
    },
    //////////Search Service//////////
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2020-08-01",
      "name": "[parameters('searchServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "standard"
      },
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "hostingMode": "default"
      }
    },
    //////////Azure OpenAI//////////
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-04-30",
      "name": "[parameters('openAiServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "OpenAI",
      "properties": {
        "apiProperties": {
          "qnaMakerEndpoint": "https://[parameters('openAiServiceName')].cognitiveservices.azure.com"
        }
      }
    },
    //////////SQL Server//////////
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-02-01-preview",
      "name": "[parameters('sqlServerName')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]"
      }
    },
    //////////SQL DB//////////
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-02-01-preview",
      "name": "[concat(parameters('sqlServerName'), '/', parameters('sqlDatabaseName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 2147483648,
        "sampleName": "AdventureWorksLT"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "servicePlanName": {
      "type": "string",
      "value": "[parameters('servicePlanName')]"
    },
    "linuxWebAppBE": {
      "type": "string",
      "value": "[parameters('linuxWebAppBE')]"
    },
    "linuxWebAppFE": {
      "type": "string",
      "value": "[parameters('linuxWebAppFE')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[parameters('keyVaultName')]"
    },
    "appInsightsBlob": {
      "type": "string",
      "value": "[parameters('appInsightsBlob')]"
    },
    "appInsightsBE": {
      "type": "string",
      "value": "[parameters('appInsightsBE')]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[parameters('logAnalyticsWorkspaceName')]"
    },
    "redisCacheName": {
      "type": "string",
      "value": "[parameters('redisCacheName')]"
    },
    "linuxFunctionAppBlob": {
      "type": "string",
      "value": "[parameters('linuxFunctionAppBlob')]"
    },
    "logicAppName": {
      "type": "string",
      "value": "[parameters('logicAppName')]"
    },
    "eventGridTopicName": {
      "type": "string",
      "value": "[parameters('eventGridTopicName')]"
    },
    "searchServiceName": {
      "type": "string",
      "value": "[parameters('searchServiceName')]"
    },
    "openAiServiceName": {
      "type": "string",
      "value": "[parameters('openAiServiceName')]"
    },
    "sqlServerName": {
      "type": "string",
      "value": "[parameters('sqlServerName')]"
    },
    "sqlDatabaseName": {
      "type": "string",
      "value": "[parameters('sqlDatabaseName')]"
    }
  }
}
